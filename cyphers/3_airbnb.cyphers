// create indices for faster loading
CREATE INDEX ON :Rental(id);
CREATE INDEX ON :Review(id);

// insert Airbnb listings
CALL apoc.load.json('FILE:///airbnb_listings.json')
YIELD value
MERGE (r:Rental {id: value.id})
SET r.property_type_id = value.property_type_id,
    r.tier_id = value.tier_id,
    r.name = value.name,
    r.bedrooms = value.bedrooms,
    r.beds = value.beds,
    r.bathrooms = value.bathrooms,
    r.bedroom_label = value.bedroom_label,
    r.bathroom_label = value.bathroom_label,
    r.guests = value.person_capacity,
    r.city = value.city,
    r.neighborhood = value.neighborhood,
    r.latitude = value.coordinate.latitude,
    r.longitude = value.coordinate.longitude,
    r.is_superhost = value.is_superhost,
    r.is_new_listing = value.is_new_listing,
    r.room_and_property_type = value.room_and_property_type,
    r.room_type = value.room_type,
    r.space_type = value.space_type,
    r.preview_amenity_names = value.preview_amenity_names,
    r.amenity_ids = value.amenity_ids,
    r.kicker_content = value.kicker_content.messages,
    r.wide_kicker_content = value.wide_kicker_content.messages,
    r.rate = value.rate.amount
RETURN count(r) AS Rental;

// insert Airbnb reviews
CALL apoc.load.json('FILE:///airbnb_reviews.json')
YIELD value
MERGE (r:Review {id: value.id})
SET r.listing_id = value.listing_id,
    r.author_id = value.author_id,
    r.recipient_id = value.recipient_id,
    r.rating = value.rating,
    r.comments = value.comments,
    r.response = value.response,
    r.created_at = value.created_at
RETURN count(r) AS Review;

// connect Airbnb listings and reviews
MATCH (a:Rental), (b:Review)
WHERE a.id = b.listing_id
CREATE (a)-[r:Is_Reviewed]->(b)
RETURN count(r) as Is_Reviewed;
